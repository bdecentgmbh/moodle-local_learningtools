{"version":3,"file":"learningbookmarks.min.js","sources":["../src/learningbookmarks.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Bookmarks ltool define js.\n * @module   ltool_bookmarks\n * @category  Classes - autoloading\n * @copyright 2021, bdecent gmbh bdecent.de\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/str', 'core/ajax', 'core/notification', 'jquery'],\n    function(String, Ajax, notification, $, str) {\n\n    /* global ltools, pagebookmarks */\n\n    /**\n     * Controls bookmarks tool action.\n     * @param {int} contextid\n     * @param {object} params\n     */\n    function learningToolBookmarksAction(contextid, params) {\n\n        var bookmarkmarked = document.getElementById('bookmarks-marked');\n        if (bookmarkmarked) {\n            if (pagebookmarks) {\n                bookmarkmarked.classList.add('marked');\n            } else {\n                bookmarkmarked.classList.remove('marked');\n            }\n        }\n\n        var bookmarksform = document.getElementById('ltbookmarks-action');\n        if (bookmarksform) {\n            bookmarksform.addEventListener(\"click\", function(e) {\n                e.preventDefault();\n                submitFormdata(contextid, params);\n            });\n            // Hover color.\n            var bookmarkshovercolor = bookmarksform.getAttribute(\"data-hovercolor\");\n            var bookmarksfontcolor = bookmarksform.getAttribute(\"data-fontcolor\");\n            if (bookmarkshovercolor && bookmarksfontcolor) {\n                bookmarksform.addEventListener(\"mouseover\", function() {\n                    document.querySelector('#ltbookmarksinfo p').style.background = bookmarkshovercolor;\n                    document.querySelector('#ltbookmarksinfo p').style.color = bookmarksfontcolor;\n                });\n            }\n\n        }\n\n        // Content designer bookmarks.\n        $(document).on('click', '.content-designer-learningtool-bookmark', function(e) {\n            e.preventDefault();\n            var button = $(this);\n            var itemType = button.data('itemtype');\n            var itemId = button.data('itemid');\n            var userid = button.data('userid');\n            var sesskey = button.data('sesskey');\n            var course = button.data('courseid');\n            var coursemodule = button.data('coursemodule');\n            var contextlevel = button.data('contextlevel');\n            var pagetype = button.data('pagetype');\n            var pageurl = button.data('pageurl');\n            // Prepare the parameters for the bookmark.\n            var contextId = M.cfg.contextid;\n            var params = {\n                pagetitle: document.title,\n                pageurl: pageurl,\n                pageid: 0,\n                itemtype: itemType,\n                itemid: itemId,\n                user: userid,\n                sesskey: sesskey,\n                course: course,\n                coursemodule: coursemodule,\n                contextlevel: contextlevel,\n                pagetype: pagetype,\n            };\n            submitFormdata(contextId, params, button);\n        });\n\n        var bookmarkssorttype = document.getElementById(\"bookmarkssorttype\");\n\n        if (bookmarkssorttype) {\n            bookmarkssorttype.addEventListener(\"click\", function() {\n                var sorttype = this.getAttribute(\"data-type\");\n                bookmarksSortActionPage(sorttype);\n            });\n        }\n    }\n\n    /**\n     * Sort the bookmarks list.\n     * @param {string} sorttype type of sort\n     * @return {void}\n     */\n    function bookmarksSortActionPage(sorttype) {\n\n        var pageurl = window.location.href;\n        var para = '';\n        pageurl = removeURLParameter(pageurl, 'sorttype');\n\n        if (sorttype == 'asc') {\n            sorttype = 'desc';\n        } else if (sorttype == 'desc') {\n            sorttype = 'asc';\n        }\n\n        if (pageurl.indexOf('?') > -1) {\n            para = '&';\n        } else {\n            para = '?';\n        }\n\n        pageurl = pageurl + para + 'sorttype=' + sorttype;\n        window.open(pageurl, '_self');\n    }\n\n\n    /**\n     * Clean the url parameters.\n     * @param {string} url page url.\n     * @param {string} parameter url parameter.\n     * @return {url} sort url\n     */\n    function removeURLParameter(url, parameter) {\n        // Prefer to use l.search if you have a location/link object.\n        var urlparts = url.split('?');\n        if (urlparts.length >= 2) {\n\n            var prefix = encodeURIComponent(parameter) + '=';\n            var pars = urlparts[1].split(/[&;]/g);\n\n            // Reverse iteration as may be destructive.\n            for (var i = pars.length; i-- > 0;) {\n                // Idiom for string.startsWith.\n                if (pars[i].lastIndexOf(prefix, 0) !== -1) {\n                    pars.splice(i, 1);\n                }\n            }\n            url = urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : \"\");\n            return url;\n        } else {\n            return url;\n        }\n    }\n\n    /**\n     * Bookmarks submit the form data.\n     * @param {int} contextid context id.\n     * @param {object} formData form instance data.\n     * @return {void} ajax response\n     */\n    function submitFormdata(contextid, formData, button = null) {\n\n        if (formData.pagetitle == \"\") {\n            formData.pagetitle = document.querySelector('title').innerHTML;\n        }\n        var Formdata = JSON.stringify(formData);\n        Ajax.call([{\n            methodname: 'ltool_bookmarks_save_userbookmarks',\n            args: {contextid: contextid, formdata: Formdata},\n            done: function(response) {\n\n                notification.addNotification({\n                    message: response.bookmarksmsg,\n                    type: response.notificationtype\n                });\n\n\n                let bookmarkmarked = document.getElementById('bookmarks-marked');\n                if (response.bookmarksstatus) {\n                    if (button) {\n                        require(['mod_contentdesigner/elements'], function(Elements) {\n                            var chapterId = formData.itemid;\n                            if (chapterId) {\n                                Elements.removeWarning();\n                                Elements.refreshContent();\n                            }\n                        });\n                    } else {\n                        bookmarkmarked.classList.add('marked');\n                    }\n                } else {\n                    if (button) {\n                        require(['mod_contentdesigner/elements'], function(Elements) {\n                            var chapterId = formData.itemid;\n                            if (chapterId) {\n                                Elements.removeWarning();\n                                Elements.refreshContent();\n                            }\n                        });\n                    } else {\n                        bookmarkmarked.classList.remove('marked');\n                    }\n                }\n\n                if (ltools.disappertimenotify != 0) {\n                    setTimeout(function() {\n                        document.querySelector(\"span.notifications\").innerHTML = \"\";\n                    }, ltools.disappertimenotify);\n                }\n\n            },fail: function(error) {\n                notification.exception(error);\n            }\n        }]);\n    }\n\n    return {\n        init: function(contextid, params) {\n            learningToolBookmarksAction(contextid, params);\n        }\n    };\n});\n"],"names":["define","String","Ajax","notification","$","str","learningToolBookmarksAction","contextid","params","bookmarkmarked","document","getElementById","pagebookmarks","classList","add","remove","bookmarksform","addEventListener","e","preventDefault","submitFormdata","bookmarkshovercolor","getAttribute","bookmarksfontcolor","querySelector","style","background","color","on","button","this","itemType","data","itemId","userid","sesskey","course","coursemodule","contextlevel","pagetype","pageurl","M","cfg","pagetitle","title","pageid","itemtype","itemid","user","bookmarkssorttype","sorttype","window","location","href","para","url","parameter","urlparts","split","length","prefix","encodeURIComponent","pars","i","lastIndexOf","splice","join","removeURLParameter","indexOf","open","bookmarksSortActionPage","formData","innerHTML","Formdata","JSON","stringify","call","methodname","args","formdata","done","response","addNotification","message","bookmarksmsg","type","notificationtype","bookmarksstatus","require","Elements","removeWarning","refreshContent","ltools","disappertimenotify","setTimeout","fail","error","exception","init"],"mappings":"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"}