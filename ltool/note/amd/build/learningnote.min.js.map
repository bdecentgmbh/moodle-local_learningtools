{"version":3,"file":"learningnote.min.js","sources":["../src/learningnote.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Notes ltool define js.\r\n * @module   ltool_note\r\n * @category  Classes - autoloading\r\n * @copyright 2021, bdecent gmbh bdecent.de\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery', 'core/modal_factory', 'core/str', 'core/fragment', 'core/modal_events', 'core/ajax', 'core/notification', 'core/utils', \"core/config\"],\r\n    function ($, ModalFactory, String, Fragment, ModalEvents, Ajax, notification, Utils, Config) {\r\n\r\n    /* global ltools, ltool_note_config */\r\n\r\n    // Store reference to print window\r\n    var printWindow = null\r\n\r\n    /**\r\n     * Controls notes tool action.\r\n     * @param {int} contextid context id\r\n     */\r\n    function learningToolNoteAction(contextid) {\r\n        // Get configuration from global variable\r\n        const params = window.ltool_note_config || {}\r\n\r\n        showModalLttool(contextid, params);\r\n        var sorttypefilter = document.querySelector(\".ltnote-sortfilter i#notessorttype\");\r\n        if (sorttypefilter) {\r\n            sorttypefilter.addEventListener(\"click\", function () {\r\n                var sorttype = this.getAttribute('data-type');\r\n                noteSortActionPage(sorttype);\r\n            });\r\n        }\r\n\r\n        // Content designer note.\r\n        $(document).on('click', '.content-designer-learningtool-note', function (e) {\r\n            var button = $(this);\r\n            var itemType = button.data('itemtype');\r\n            var itemId = button.data('itemid');\r\n            var pageurl = button.data('pageurl');\r\n            params.itemtype = itemType;\r\n            params.itemid = itemId;\r\n            params.pageurl = pageurl;\r\n            modalshowHandler(contextid, params, true);\r\n        });\r\n\r\n        var noteprintblock = document.querySelector(\".note-print-block\");\r\n        if (noteprintblock) {\r\n            noteprintblock.addEventListener(\"click\", notePrintHandler.bind(contextid, params));\r\n        }\r\n\r\n        const clearIcon = document.querySelector('.ltool-navigation [data-action=\"clearsearch\"]');\r\n        var searchinput = document.querySelector('.ltool-navigation [data-action=\"search\"]');\r\n\r\n        if (clearIcon) {\r\n            clearIcon.addEventListener('click', () => {\r\n                searchinput.value = '';\r\n                searchinput.focus();\r\n                clearSearch(clearIcon);\r\n                // Load default content without search\r\n                performSearch(\"\", contextid, params);\r\n            });\r\n        }\r\n\r\n        if (searchinput) {\r\n            searchinput.addEventListener('input', Utils.debounce(() => {\r\n                if (searchinput.value === '') {\r\n                    clearSearch(clearIcon);\r\n                    // Load default content without search\r\n                    performSearch(\"\", contextid, params);\r\n                } else {\r\n                    activeSearch(clearIcon);\r\n                    var search = searchinput.value.trim();\r\n                    // If you have a search function, you can call it here.\r\n                    console.log(searchinput.value.trim());\r\n                    performSearch(search, contextid, params);\r\n                }\r\n            }, 1000));\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Perform search and update the notes list\r\n     * @param {string} searchTerm The search term\r\n     * @param {int} contextid The context ID\r\n     * @param {object} params The parameters\r\n     */\r\n    function performSearch(searchTerm, contextid, params) {\r\n        var notesContainer = document.querySelector(\".ltool-notes-container, .note-list-container, .ltool-notes-grid\")\r\n\r\n        if (!notesContainer) {\r\n            // If no container found, reload page with search parameter\r\n            var currentUrl = new URL(window.location.href)\r\n            currentUrl.searchParams.set(\"search\", searchTerm)\r\n            window.location.href = currentUrl.toString()\r\n            return\r\n        }\r\n\r\n        // Show loading indicator\r\n        notesContainer.innerHTML =\r\n            '<div class=\"text-center p-4\"><i class=\"fa fa-spinner fa-spin fa-2x\"></i><p class=\"mt-2\">Searching notes...</p></div>'\r\n\r\n        // Prepare fragment parameters\r\n        var fragmentParams = {\r\n            courseid: params.course,\r\n            search: searchTerm,\r\n            sectionid: 0,\r\n            activity: 0,\r\n            filter: \"\",\r\n            print: false,\r\n        }\r\n\r\n        // Load search results using fragment\r\n        Fragment.loadFragment(\"ltool_note\", \"get_notes_list\", contextid, fragmentParams)\r\n            .then((html) => {\r\n                notesContainer.innerHTML = html\r\n                // Update URL without reloading page\r\n                var currentUrl = new URL(window.location.href)\r\n                currentUrl.searchParams.set(\"search\", searchTerm)\r\n                window.history.pushState({}, \"\", currentUrl.toString())\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Search error:\", error)\r\n                notesContainer.innerHTML =\r\n                    '<div class=\"alert alert-danger\">Error loading search results. Please try again.</div>'\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Reset the search icon and trigger the init for the block.\r\n     *\r\n     * @param {HTMLElement} clearIcon Our closing icon to manipulate.\r\n     */\r\n    const clearSearch = (clearIcon) => {\r\n        clearIcon.classList.add('d-none');\r\n    };\r\n\r\n    /**\r\n     * Change the searching icon to its' active state.\r\n     *\r\n     * @param {HTMLElement} clearIcon Our closing icon to manipulate.\r\n     */\r\n    const activeSearch = (clearIcon) => {\r\n        clearIcon.classList.remove('d-none');\r\n    };\r\n\r\n    /**\r\n     * Clean the url parameters.\r\n     * @param {string} url page url.\r\n     * @param {string} parameter url parameter.\r\n     * @return {url} sort url\r\n     */\r\n    function removeURLParameter(url, parameter) {\r\n        // Prefer to use l.search if you have a location/link object.\r\n        var urlparts = url.split('?');\r\n        if (urlparts.length >= 2) {\r\n\r\n            var prefix = encodeURIComponent(parameter) + '=';\r\n            var pars = urlparts[1].split(/[&;]/g);\r\n\r\n            // Reverse iteration as may be destructive.\r\n            for (var i = pars.length; i-- > 0;) {\r\n                // Idiom for string.startsWith.\r\n                if (pars[i].lastIndexOf(prefix, 0) !== -1) {\r\n                    pars.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            url = urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : \"\");\r\n            return url;\r\n        } else {\r\n            return url;\r\n        }\r\n    }\r\n\r\n\r\n    function modalshowHandler(contextid, params, contentDesigner = false) {\r\n        var newnote = String.get_string('newnote', 'local_learningtools');\r\n        $.when(newnote).done(function (localizedEditString) {\r\n            // Add class.\r\n            var ltoolnotebody = document.getElementsByTagName('body')[0];\r\n            if (!ltoolnotebody.classList.contains('learningtool-note')) {\r\n                ltoolnotebody.classList.add('learningtool-note');\r\n            }\r\n\r\n            ModalFactory.create({\r\n                title: localizedEditString + getPopoutAction(),\r\n                type: ModalFactory.types.SAVE_CANCEL,\r\n                body: getnoteaction(contextid, params),\r\n                large: true\r\n            }).then(function (modal) {\r\n\r\n                modal.show();\r\n\r\n                modal.getRoot().on(ModalEvents.hidden, function () {\r\n                    modal.destroy();\r\n                });\r\n\r\n                modal.getRoot().on(ModalEvents.save, function (e) {\r\n                    e.preventDefault();\r\n                    $(e.target).find(\"button[data-action=save]\").attr(\"disabled\", true);\r\n                    modal.getRoot().find('form').submit();\r\n                });\r\n\r\n                modal.getRoot().on('submit', 'form', e => {\r\n                    e.preventDefault();\r\n                    submitFormData(modal, contextid, params, contentDesigner);\r\n                });\r\n\r\n                document.querySelector(\"#popout-action\").addEventListener('click', function () {\r\n                    var pageurlobj = params.pageurl.split(\"&\");\r\n                    var pageurljson = JSON.stringify(pageurlobj);\r\n                    var url = M.cfg.wwwroot + \"/local/learningtools/ltool/note/pop_out.php?contextid=\" +\r\n                        params.contextid + \"&pagetype=\" + params.pagetype + \"&contextlevel=\" + params.contextlevel + \"&course=\"\r\n                        + params.course + \"&user=\" + params.user + \"&pageurl=\" + pageurljson + \"&pagetitle=\" + params.pagetitle\r\n                        + \"&heading=\" + params.heading + \"&sesskey=\" + params.sesskey;\r\n                    if (params.itemtype) {\r\n                        url += \"&itemtype=\" + params.itemtype + \"&itemid=\" + params.itemid;\r\n                    }\r\n                    modal.hide();\r\n                    window.open(url, '_blank');\r\n                });\r\n                return modal;\r\n            }).catch(notification.exception);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Display the modal popup.\r\n     * @param {int} contextid context id\r\n     * @param {object} params notes info params\r\n     * @return {void}\r\n     */\r\n    function showModalLttool(contextid, params) {\r\n\r\n        var notesinfo = document.querySelector(\".ltnoteinfo #ltnote-action\");\r\n        if (notesinfo) {\r\n            notesinfo.addEventListener(\"click\", function () {\r\n                params.itemtype = '';\r\n                params.itemid = 0;\r\n                modalshowHandler(contextid, params);\r\n            });\r\n            // Hover color.\r\n            var notehovercolor = notesinfo.getAttribute(\"data-hovercolor\");\r\n            var notefontcolor = notesinfo.getAttribute(\"data-fontcolor\");\r\n            if (notehovercolor && notefontcolor) {\r\n                notesinfo.addEventListener(\"mouseover\", function () {\r\n                    document.querySelector('#ltnoteinfo p').style.background = notehovercolor;\r\n                    document.querySelector('#ltnoteinfo p').style.color = notefontcolor;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sort the notes list.\r\n     * @param {string} sorttype sort type\r\n     * @return {void}\r\n     */\r\n    function noteSortActionPage(sorttype) {\r\n\r\n        var pageurl = window.location.href;\r\n        pageurl = removeURLParameter(pageurl, 'sorttype');\r\n\r\n        if (sorttype == 'asc') {\r\n            sorttype = 'desc';\r\n        } else if (sorttype == 'desc') {\r\n            sorttype = 'asc';\r\n        }\r\n        var para = '';\r\n        if (pageurl.indexOf('?') > -1) {\r\n            para = '&';\r\n        } else {\r\n            para = '?';\r\n        }\r\n\r\n        pageurl = pageurl + para + 'sorttype=' + sorttype;\r\n        window.open(pageurl, '_self');\r\n    }\r\n\r\n    /**\r\n     * Popout url action html.\r\n     * @return {string} popout html\r\n     */\r\n    function getPopoutAction() {\r\n        var popouthtml = \"<div class='popout-block'><button type='submit' id='popout-action'\"\r\n            + \"name='popoutsubmit'>Pop out</button> <i class='fa fa-window-restore'></i></div>\";\r\n        return popouthtml;\r\n    }\r\n\r\n    /**\r\n     * Submit the modal data form.\r\n     * @param {object} modal object\r\n     * @param {int} contextid context id\r\n     * @return {void} ajax respoltoolsnse.\r\n     */\r\n    function submitFormData(modal, contextid, params, contentDesigner = false) {\r\n        var modalform = document.querySelectorAll('.ltoolusernotes form')[0];\r\n        var formData = new URLSearchParams(new FormData(modalform)).toString();\r\n        var notesuccess = String.get_string('successnotemessage', 'local_learningtools');\r\n        Ajax.call([{\r\n            methodname: 'ltool_note_save_usernote',\r\n            args: { contextid: contextid, formdata: formData },\r\n            done: function (response) {\r\n                // Insert data into notes badge.\r\n                if (response) {\r\n                    // Check if this is a content designer note by looking for the trigger button\r\n                    if (contentDesigner) {\r\n                        // Try to refresh the chapter if content designer is available\r\n                        require(['mod_contentdesigner/elements'], function (Elements) {\r\n                            var chapterId = params.itemid;\r\n                            if (chapterId) {\r\n                                Elements.removeWarning();\r\n                                Elements.refreshContent();\r\n                            }\r\n                        });\r\n                    } else {\r\n                        var noteinfo = document.querySelector(\".ltnoteinfo span\");\r\n                        if (!noteinfo.classList.contains('ticked')) {\r\n                            noteinfo.classList.add('ticked');\r\n                        }\r\n                        noteinfo.innerHTML = response;\r\n                    }\r\n                }\r\n\r\n                modal.hide();\r\n                $.when(notesuccess).done(function (localizedEditString) {\r\n                    notification.addNotification({\r\n                        message: localizedEditString,\r\n                        type: \"success\"\r\n                    });\r\n                });\r\n\r\n                if (ltools.disappertimenotify != 0) {\r\n                    setTimeout(function () {\r\n                        document.querySelector(\"span.notifications\").innerHTML = \"\";\r\n                    }, ltools.disappertimenotify);\r\n                }\r\n            },\r\n        }]);\r\n    }\r\n\r\n    /**\r\n     * Submit the modal data form.\r\n     * @param {int} contextid\r\n     * @param {object} params list of the notes params.\r\n     * @return {string} displayed the note editor form\r\n     */\r\n    function getnoteaction(contextid, params) {\r\n        params.contextid = contextid;\r\n        if (params.pagetitle == \"\") {\r\n            params.pagetitle = document.querySelector(\"title\").innerHTML;\r\n        }\r\n        return Fragment.loadFragment('ltool_note', 'get_note_form', contextid, params);\r\n    }\r\n\r\n    /**\r\n     * Handle print action\r\n     * @param {object} args Configuration arguments\r\n     */\r\n    function notePrintHandler(args) {\r\n      // Prevent multiple print windows\r\n      if (printWindow && !printWindow.closed) {\r\n        printWindow.focus()\r\n        return true\r\n      }\r\n\r\n      // Create URL for print page\r\n      var printUrl = Config.wwwroot + \"/local/learningtools/ltool/note/print.php\"\r\n      var params = new URLSearchParams()\r\n\r\n      params.append(\"contextid\", args.contextid)\r\n      params.append(\"courseid\", args.course || 0)\r\n      params.append(\"sesskey\", args.sesskey)\r\n\r\n      // Add current filter parameters if they exist\r\n      var currentUrl = new URL(window.location.href)\r\n      var search = currentUrl.searchParams.get(\"search\") || \"\"\r\n      var filter = currentUrl.searchParams.get(\"filter\") || \"\"\r\n      var sectionid = currentUrl.searchParams.get(\"sectionid\") || 0\r\n      var activity = currentUrl.searchParams.get(\"activity\") || 0\r\n\r\n      if (search) params.append(\"search\", search)\r\n      if (filter) params.append(\"filter\", filter)\r\n      if (sectionid) params.append(\"sectionid\", sectionid)\r\n      if (activity) params.append(\"activity\", activity)\r\n\r\n      var fullUrl = printUrl + \"?\" + params.toString()\r\n\r\n      // Open print page in new window and store reference\r\n      printWindow = window.open(\r\n        fullUrl,\r\n        \"printNotes\",\r\n        \"width=1000,height=700,scrollbars=yes,resizable=yes,toolbar=no,location=no,status=no\",\r\n      )\r\n\r\n      // Focus the print window\r\n      if (printWindow) {\r\n        printWindow.focus()\r\n      }\r\n\r\n      return true\r\n    }\r\n\r\n    function getnotescontents(contextid, params) {\r\n        return Fragment.loadFragment('ltool_note', 'get_notes_contents', contextid, params);\r\n    }\r\n\r\n    return {\r\n\r\n        init: (contextid) => {\r\n            learningToolNoteAction(contextid);\r\n        },\r\n    };\r\n});\r\n"],"names":["define","$","ModalFactory","String","Fragment","ModalEvents","Ajax","notification","Utils","Config","printWindow","learningToolNoteAction","contextid","params","window","ltool_note_config","notesinfo","document","querySelector","addEventListener","itemtype","itemid","modalshowHandler","notehovercolor","getAttribute","notefontcolor","style","background","color","showModalLttool","sorttypefilter","sorttype","pageurl","location","href","url","parameter","urlparts","split","length","prefix","encodeURIComponent","pars","i","lastIndexOf","splice","join","removeURLParameter","para","indexOf","open","noteSortActionPage","this","on","e","button","itemType","data","itemId","noteprintblock","notePrintHandler","bind","clearIcon","searchinput","value","focus","clearSearch","performSearch","debounce","activeSearch","search","trim","console","log","searchTerm","notesContainer","currentUrl","URL","searchParams","set","toString","innerHTML","fragmentParams","courseid","course","sectionid","activity","filter","print","loadFragment","then","html","history","pushState","catch","error","classList","add","remove","contentDesigner","newnote","get_string","when","done","localizedEditString","ltoolnotebody","getElementsByTagName","contains","create","title","getPopoutAction","type","types","SAVE_CANCEL","body","getnoteaction","large","modal","show","getRoot","hidden","destroy","save","preventDefault","target","find","attr","submit","submitFormData","pageurlobj","pageurljson","JSON","stringify","M","cfg","wwwroot","pagetype","contextlevel","user","pagetitle","heading","sesskey","hide","exception","modalform","querySelectorAll","formData","URLSearchParams","FormData","notesuccess","call","methodname","args","formdata","response","require","Elements","removeWarning","refreshContent","noteinfo","addNotification","message","ltools","disappertimenotify","setTimeout","closed","printUrl","append","get","fullUrl","init"],"mappings":";;;;;;;AAuBAA,iCAAO,CAAC,SAAU,qBAAsB,WAAY,gBAAiB,oBAAqB,YAAa,oBAAqB,aAAc,gBACtI,SAAUC,EAAGC,aAAcC,OAAQC,SAAUC,YAAaC,KAAMC,aAAcC,MAAOC,YAKjFC,YAAc,cAMTC,uBAAuBC,iBAEtBC,OAASC,OAAOC,mBAAqB,aAmNtBH,UAAWC,YAE5BG,UAAYC,SAASC,cAAc,iCACnCF,UAAW,CACXA,UAAUG,iBAAiB,SAAS,WAChCN,OAAOO,SAAW,GAClBP,OAAOQ,OAAS,EAChBC,iBAAiBV,UAAWC,eAG5BU,eAAiBP,UAAUQ,aAAa,mBACxCC,cAAgBT,UAAUQ,aAAa,kBACvCD,gBAAkBE,eAClBT,UAAUG,iBAAiB,aAAa,WACpCF,SAASC,cAAc,iBAAiBQ,MAAMC,WAAaJ,eAC3DN,SAASC,cAAc,iBAAiBQ,MAAME,MAAQH,kBAhOlEI,CAAgBjB,UAAWC,YACvBiB,eAAiBb,SAASC,cAAc,sCACxCY,gBACAA,eAAeX,iBAAiB,SAAS,qBAwOrBY,cAEpBC,QAAUlB,OAAOmB,SAASC,KAC9BF,iBA9GwBG,IAAKC,eAEzBC,SAAWF,IAAIG,MAAM,QACrBD,SAASE,QAAU,EAAG,SAElBC,OAASC,mBAAmBL,WAAa,IACzCM,KAAOL,SAAS,GAAGC,MAAM,SAGpBK,EAAID,KAAKH,OAAQI,KAAM,IAEY,IAApCD,KAAKC,GAAGC,YAAYJ,OAAQ,IAC5BE,KAAKG,OAAOF,EAAG,UAIvBR,IAAME,SAAS,IAAMK,KAAKH,OAAS,EAAI,IAAMG,KAAKI,KAAK,KAAO,WAGvDX,IA2FDY,CAAmBf,QAAS,YAEtB,OAAZD,SACAA,SAAW,OACQ,QAAZA,WACPA,SAAW,WAEXiB,KAAO,GAEPA,KADAhB,QAAQiB,QAAQ,MAAQ,EACjB,IAEA,IAGXjB,QAAUA,QAAUgB,KAAO,YAAcjB,SACzCjB,OAAOoC,KAAKlB,QAAS,SAxPbmB,CADeC,KAAK5B,aAAa,iBAMzCvB,EAAEgB,UAAUoC,GAAG,QAAS,uCAAuC,SAAUC,OACjEC,OAAStD,EAAEmD,MACXI,SAAWD,OAAOE,KAAK,YACvBC,OAASH,OAAOE,KAAK,UACrBzB,QAAUuB,OAAOE,KAAK,WAC1B5C,OAAOO,SAAWoC,SAClB3C,OAAOQ,OAASqC,OAChB7C,OAAOmB,QAAUA,QACjBV,iBAAiBV,UAAWC,QAAQ,UAGpC8C,eAAiB1C,SAASC,cAAc,qBACxCyC,gBACAA,eAAexC,iBAAiB,QAASyC,iBAAiBC,KAAKjD,UAAWC,eAGxEiD,UAAY7C,SAASC,cAAc,qDACrC6C,YAAc9C,SAASC,cAAc,4CAErC4C,WACAA,UAAU3C,iBAAiB,SAAS,KAChC4C,YAAYC,MAAQ,GACpBD,YAAYE,QACZC,YAAYJ,WAEZK,cAAc,GAAIvD,UAAWC,WAIjCkD,aACAA,YAAY5C,iBAAiB,QAASX,MAAM4D,UAAS,QACvB,KAAtBL,YAAYC,MACZE,YAAYJ,WAEZK,cAAc,GAAIvD,UAAWC,YAC1B,CACHwD,aAAaP,eACTQ,OAASP,YAAYC,MAAMO,OAE/BC,QAAQC,IAAIV,YAAYC,MAAMO,QAC9BJ,cAAcG,OAAQ1D,UAAWC,WAEtC,eAWFsD,cAAcO,WAAY9D,UAAWC,YACtC8D,eAAiB1D,SAASC,cAAc,uEAEvCyD,eAAgB,KAEbC,WAAa,IAAIC,IAAI/D,OAAOmB,SAASC,aACzC0C,WAAWE,aAAaC,IAAI,SAAUL,iBACtC5D,OAAOmB,SAASC,KAAO0C,WAAWI,YAKtCL,eAAeM,UACX,2HAGAC,eAAiB,CACjBC,SAAUtE,OAAOuE,OACjBd,OAAQI,WACRW,UAAW,EACXC,SAAU,EACVC,OAAQ,GACRC,OAAO,GAIXpF,SAASqF,aAAa,aAAc,iBAAkB7E,UAAWsE,gBAC5DQ,MAAMC,OACHhB,eAAeM,UAAYU,SAEvBf,WAAa,IAAIC,IAAI/D,OAAOmB,SAASC,MACzC0C,WAAWE,aAAaC,IAAI,SAAUL,YACtC5D,OAAO8E,QAAQC,UAAU,GAAI,GAAIjB,WAAWI,eAE/Cc,OAAOC,QACJvB,QAAQuB,MAAM,gBAAiBA,OAC/BpB,eAAeM,UACX,iGASVf,YAAeJ,YACjBA,UAAUkC,UAAUC,IAAI,WAQtB5B,aAAgBP,YAClBA,UAAUkC,UAAUE,OAAO,oBAiCtB5E,iBAAiBV,UAAWC,YAAQsF,4EACrCC,QAAUjG,OAAOkG,WAAW,UAAW,uBAC3CpG,EAAEqG,KAAKF,SAASG,MAAK,SAAUC,yBAEvBC,cAAgBxF,SAASyF,qBAAqB,QAAQ,GACrDD,cAAcT,UAAUW,SAAS,sBAClCF,cAAcT,UAAUC,IAAI,qBAGhC/F,aAAa0G,OAAO,CAChBC,MAAOL,oBAAsBM,kBAC7BC,KAAM7G,aAAa8G,MAAMC,YACzBC,KAAMC,cAAcvG,UAAWC,QAC/BuG,OAAO,IACR1B,MAAK,SAAU2B,cAEdA,MAAMC,OAEND,MAAME,UAAUlE,GAAGhD,YAAYmH,QAAQ,WACnCH,MAAMI,aAGVJ,MAAME,UAAUlE,GAAGhD,YAAYqH,MAAM,SAAUpE,GAC3CA,EAAEqE,iBACF1H,EAAEqD,EAAEsE,QAAQC,KAAK,4BAA4BC,KAAK,YAAY,GAC9DT,MAAME,UAAUM,KAAK,QAAQE,YAGjCV,MAAME,UAAUlE,GAAG,SAAU,QAAQC,IACjCA,EAAEqE,iBACFK,eAAeX,MAAOzG,UAAWC,OAAQsF,oBAG7ClF,SAASC,cAAc,kBAAkBC,iBAAiB,SAAS,eAC3D8G,WAAapH,OAAOmB,QAAQM,MAAM,KAClC4F,YAAcC,KAAKC,UAAUH,YAC7B9F,IAAMkG,EAAEC,IAAIC,QAAU,yDACtB1H,OAAOD,UAAY,aAAeC,OAAO2H,SAAW,iBAAmB3H,OAAO4H,aAAe,WAC3F5H,OAAOuE,OAAS,SAAWvE,OAAO6H,KAAO,YAAcR,YAAc,cAAgBrH,OAAO8H,UAC5F,YAAc9H,OAAO+H,QAAU,YAAc/H,OAAOgI,QACtDhI,OAAOO,WACPe,KAAO,aAAetB,OAAOO,SAAW,WAAaP,OAAOQ,QAEhEgG,MAAMyB,OACNhI,OAAOoC,KAAKf,IAAK,aAEdkF,SACRvB,MAAMvF,aAAawI,uBA6DrBjC,wBACY,6JAWZkB,eAAeX,MAAOzG,UAAWC,YAAQsF,4EAC1C6C,UAAY/H,SAASgI,iBAAiB,wBAAwB,GAC9DC,SAAW,IAAIC,gBAAgB,IAAIC,SAASJ,YAAYhE,WACxDqE,YAAclJ,OAAOkG,WAAW,qBAAsB,uBAC1D/F,KAAKgJ,KAAK,CAAC,CACPC,WAAY,2BACZC,KAAM,CAAE5I,UAAWA,UAAW6I,SAAUP,UACxC3C,KAAM,SAAUmD,aAERA,YAEIvD,gBAEAwD,QAAQ,CAAC,iCAAiC,SAAUC,UAChC/I,OAAOQ,SAEnBuI,SAASC,gBACTD,SAASE,yBAGd,KACCC,SAAW9I,SAASC,cAAc,oBACjC6I,SAAS/D,UAAUW,SAAS,WAC7BoD,SAAS/D,UAAUC,IAAI,UAE3B8D,SAAS9E,UAAYyE,SAI7BrC,MAAMyB,OACN7I,EAAEqG,KAAK+C,aAAa9C,MAAK,SAAUC,qBAC/BjG,aAAayJ,gBAAgB,CACzBC,QAASzD,oBACTO,KAAM,eAImB,GAA7BmD,OAAOC,oBACPC,YAAW,WACPnJ,SAASC,cAAc,sBAAsB+D,UAAY,KAC1DiF,OAAOC,iCAYjBhD,cAAcvG,UAAWC,eAC9BA,OAAOD,UAAYA,UACK,IAApBC,OAAO8H,YACP9H,OAAO8H,UAAY1H,SAASC,cAAc,SAAS+D,WAEhD7E,SAASqF,aAAa,aAAc,gBAAiB7E,UAAWC,iBAOlE+C,iBAAiB4F,SAEpB9I,cAAgBA,YAAY2J,cAC9B3J,YAAYuD,SACL,MAILqG,SAAW7J,OAAO8H,QAAU,4CAC5B1H,OAAS,IAAIsI,gBAEjBtI,OAAO0J,OAAO,YAAaf,KAAK5I,WAChCC,OAAO0J,OAAO,WAAYf,KAAKpE,QAAU,GACzCvE,OAAO0J,OAAO,UAAWf,KAAKX,aAG1BjE,WAAa,IAAIC,IAAI/D,OAAOmB,SAASC,MACrCoC,OAASM,WAAWE,aAAa0F,IAAI,WAAa,GAClDjF,OAASX,WAAWE,aAAa0F,IAAI,WAAa,GAClDnF,UAAYT,WAAWE,aAAa0F,IAAI,cAAgB,EACxDlF,SAAWV,WAAWE,aAAa0F,IAAI,aAAe,EAEtDlG,QAAQzD,OAAO0J,OAAO,SAAUjG,QAChCiB,QAAQ1E,OAAO0J,OAAO,SAAUhF,QAChCF,WAAWxE,OAAO0J,OAAO,YAAalF,WACtCC,UAAUzE,OAAO0J,OAAO,WAAYjF,cAEpCmF,QAAUH,SAAW,IAAMzJ,OAAOmE,kBAGtCtE,YAAcI,OAAOoC,KACnBuH,QACA,aACA,yFAKA/J,YAAYuD,SAGP,QAOF,CAEHyG,KAAO9J,YACHD,uBAAuBC"}