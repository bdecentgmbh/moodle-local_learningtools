{"version":3,"file":"learningnote.min.js","sources":["../src/learningnote.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Notes ltool define js.\n * @module   ltool_note\n * @category  Classes - autoloading\n * @copyright 2021, bdecent gmbh bdecent.de\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/modal_factory', 'core/str', 'core/fragment', 'core/modal_events', 'core/ajax', 'core/notification'],\n    function($, ModalFactory, String, Fragment, ModalEvents, Ajax, notification) {\n\n    /* global ltools */\n\n    /**\n     * Controls notes tool action.\n     * @param {int} contextid context id\n     * @param {object} params notes info params\n     */\n    function learningToolNoteAction(contextid, params) {\n        showModalLttool(contextid, params);\n        var sorttypefilter = document.querySelector(\".ltnote-sortfilter i#notessorttype\");\n        if (sorttypefilter) {\n            sorttypefilter.addEventListener(\"click\", function() {\n                var sorttype = this.getAttribute('data-type');\n                noteSortActionPage(sorttype);\n            });\n        }\n        // Content designer note.\n        $(document).on('click', '.content-designer-learningtool-note', function(e) {\n            var button = $(this);\n            var itemType = button.data('itemtype');\n            var itemId = button.data('itemid');\n            params.itemtype = itemType;\n            params.itemid = itemId;\n            modalshowHandler(contextid, params, true);\n        });\n    }\n\n    /**\n     * Clean the url parameters.\n     * @param {string} url page url.\n     * @param {string} parameter url parameter.\n     * @return {url} sort url\n     */\n    function removeURLParameter(url, parameter) {\n        // Prefer to use l.search if you have a location/link object.\n        var urlparts = url.split('?');\n        if (urlparts.length >= 2) {\n\n            var prefix = encodeURIComponent(parameter) + '=';\n            var pars = urlparts[1].split(/[&;]/g);\n\n            // Reverse iteration as may be destructive.\n            for (var i = pars.length; i-- > 0;) {\n                // Idiom for string.startsWith.\n                if (pars[i].lastIndexOf(prefix, 0) !== -1) {\n                    pars.splice(i, 1);\n                }\n            }\n\n            url = urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : \"\");\n            return url;\n        } else {\n            return url;\n        }\n    }\n\n\n    function modalshowHandler(contextid, params, contentDesigner = false) {\n        var newnote = String.get_string('newnote', 'local_learningtools');\n        $.when(newnote).done(function(localizedEditString) {\n            // Add class.\n            var ltoolnotebody = document.getElementsByTagName('body')[0];\n            if (!ltoolnotebody.classList.contains('learningtool-note')) {\n                ltoolnotebody.classList.add('learningtool-note');\n            }\n\n            ModalFactory.create({\n                title: localizedEditString + getPopoutAction(),\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: getnoteaction(contextid, params),\n                large: true\n            }).then(function(modal) {\n\n                modal.show();\n\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    modal.destroy();\n                });\n\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    $(e.target).find(\"button[data-action=save]\").attr(\"disabled\", true);\n                    modal.getRoot().find('form').submit();\n                });\n\n                modal.getRoot().on('submit', 'form', e => {\n                    e.preventDefault();\n                    submitFormData(modal, contextid, params, contentDesigner);\n                });\n\n                document.querySelector(\"#popout-action\").addEventListener('click', function() {\n                    var pageurlobj = params.pageurl.split(\"&\");\n                    var pageurljson = JSON.stringify(pageurlobj);\n                    var url = M.cfg.wwwroot + \"/local/learningtools/ltool/note/pop_out.php?contextid=\" +\n                    params.contextid + \"&pagetype=\" + params.pagetype + \"&contextlevel=\" + params.contextlevel + \"&course=\"\n                    + params.course + \"&user=\" + params.user + \"&pageurl=\" + pageurljson + \"&pagetitle=\" + params.pagetitle\n                    + \"&heading=\" + params.heading + \"&sesskey=\" + params.sesskey;\n                    if (params.itemtype) {\n                        url += \"&itemtype=\" + params.itemtype + \"&itemid=\" + params.itemid;\n                    }\n                    modal.hide();\n                    window.open(url, '_blank');\n                });\n                return modal;\n            }).catch(notification.exception);\n        });\n    };\n\n    /**\n     * Display the modal popup.\n     * @param {int} contextid context id\n     * @param {object} params notes info params\n     * @return {void}\n     */\n    function showModalLttool(contextid, params) {\n\n        var notesinfo = document.querySelector(\".ltnoteinfo #ltnote-action\");\n        if (notesinfo) {\n            notesinfo.addEventListener(\"click\", function() {\n                params.itemtype = '';\n                params.itemid = 0;\n                modalshowHandler(contextid, params);\n            });\n            // Hover color.\n            var notehovercolor = notesinfo.getAttribute(\"data-hovercolor\");\n            var notefontcolor = notesinfo.getAttribute(\"data-fontcolor\");\n            if (notehovercolor && notefontcolor) {\n                notesinfo.addEventListener(\"mouseover\", function() {\n                    document.querySelector('#ltnoteinfo p').style.background = notehovercolor;\n                    document.querySelector('#ltnoteinfo p').style.color = notefontcolor;\n                });\n            }\n        }\n    }\n\n    /**\n     * Sort the notes list.\n     * @param {string} sorttype sort type\n     * @return {void}\n     */\n    function noteSortActionPage(sorttype) {\n\n        var pageurl = window.location.href;\n        pageurl = removeURLParameter(pageurl, 'sorttype');\n\n        if (sorttype == 'asc') {\n            sorttype = 'desc';\n        } else if (sorttype == 'desc') {\n            sorttype = 'asc';\n        }\n        var para = '';\n        if (pageurl.indexOf('?') > -1) {\n            para = '&';\n        } else {\n            para = '?';\n        }\n\n        pageurl = pageurl + para + 'sorttype=' + sorttype;\n        window.open(pageurl, '_self');\n    }\n\n    /**\n     * Popout url action html.\n     * @return {string} popout html\n     */\n    function getPopoutAction() {\n        var popouthtml = \"<div class='popout-block'><button type='submit' id='popout-action'\"\n        + \"name='popoutsubmit'>Pop out</button> <i class='fa fa-window-restore'></i></div>\";\n        return popouthtml;\n    }\n\n    /**\n     * Submit the modal data form.\n     * @param {object} modal object\n     * @param {int} contextid context id\n     * @return {void} ajax respoltoolsnse.\n     */\n    function submitFormData(modal, contextid, params, contentDesigner = false) {\n        var modalform = document.querySelectorAll('.ltoolusernotes form')[0];\n        var formData = new URLSearchParams(new FormData(modalform)).toString();\n        var notesuccess = String.get_string('successnotemessage', 'local_learningtools');\n        Ajax.call([{\n            methodname: 'ltool_note_save_usernote',\n            args: {contextid: contextid, formdata: formData},\n            done: function(response) {\n                // Insert data into notes badge.\n                if (response) {\n                    // Check if this is a content designer note by looking for the trigger button\n                    if (contentDesigner) {\n                        // Try to refresh the chapter if content designer is available\n                        require(['mod_contentdesigner/elements'], function(Elements) {\n                            var chapterId = params.itemid;\n                            if (chapterId) {\n                                Elements.refreshContent();\n                            }\n                        });\n                    } else {\n                        var noteinfo = document.querySelector(\".ltnoteinfo span\");\n                        if (!noteinfo.classList.contains('ticked')) {\n                            noteinfo.classList.add('ticked');\n                        }\n                        noteinfo.innerHTML = response;\n                    }\n                }\n\n                modal.hide();\n                $.when(notesuccess).done(function(localizedEditString) {\n                    notification.addNotification({\n                        message: localizedEditString,\n                        type: \"success\"\n                    });\n                });\n\n                if (ltools.disappertimenotify != 0) {\n                    setTimeout(function() {\n                        document.querySelector(\"span.notifications\").innerHTML = \"\";\n                    }, ltools.disappertimenotify);\n                }\n            },\n        }]);\n    }\n\n    /**\n     * Submit the modal data form.\n     * @param {int} contextid\n     * @param {object} params list of the notes params.\n     * @return {string} displayed the note editor form\n     */\n    function getnoteaction(contextid, params) {\n        params.contextid = contextid;\n        if (params.pagetitle == \"\") {\n            params.pagetitle = document.querySelector(\"title\").innerHTML;\n        }\n        return Fragment.loadFragment('ltool_note', 'get_note_form', contextid, params);\n    }\n    return {\n        init: function(contextid, params) {\n            learningToolNoteAction(contextid, params);\n        }\n    };\n});"],"names":["define","$","ModalFactory","String","Fragment","ModalEvents","Ajax","notification","learningToolNoteAction","contextid","params","notesinfo","document","querySelector","addEventListener","itemtype","itemid","modalshowHandler","notehovercolor","getAttribute","notefontcolor","style","background","color","showModalLttool","sorttypefilter","sorttype","pageurl","window","location","href","url","parameter","urlparts","split","length","prefix","encodeURIComponent","pars","i","lastIndexOf","splice","join","removeURLParameter","para","indexOf","open","noteSortActionPage","this","on","e","button","itemType","data","itemId","contentDesigner","newnote","get_string","when","done","localizedEditString","ltoolnotebody","getElementsByTagName","classList","contains","add","create","title","getPopoutAction","type","types","SAVE_CANCEL","body","getnoteaction","large","then","modal","show","getRoot","hidden","destroy","save","preventDefault","target","find","attr","submit","submitFormData","pageurlobj","pageurljson","JSON","stringify","M","cfg","wwwroot","pagetype","contextlevel","course","user","pagetitle","heading","sesskey","hide","catch","exception","modalform","querySelectorAll","formData","URLSearchParams","FormData","toString","notesuccess","call","methodname","args","formdata","response","require","Elements","refreshContent","noteinfo","innerHTML","addNotification","message","ltools","disappertimenotify","setTimeout","loadFragment","init"],"mappings":"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"}